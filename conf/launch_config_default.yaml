# LaunchConfig

# If enabled will assert that the loaded config is a subset of the `LaunchConfig` class.
#  
# If set to >= 2, will assert that during runtime the types are correct.
strict_config: 3
# unused kept for compatibility with carla examples.
verbose: true
# If true will print out some more information and draws waypoints
debug: true

# If True will create an interactive session with command line input
# - NOTE: Needs custom code in the main file (Not implemented)
interactive: false
seed: 1
map: Town04_Opt
host: 127.0.0.1
port: 2000
# Timeout for the `carla.Client` connection.
timeout: 10.0

# Used to fix `carla.WorldSettings.fixed_delta_seconds`
#  
# Experimental also used to cap fps in the simulation.
fps: 20

# If True, the simulation will be set to run in synchronous mode.
# For False, the simulation will be set to run in asynchronous mode.
# If None the world settings for synchronous mode will not be adjusted,
# assuming this is handled by the user / external system.
sync: true

# Decide if the GameFramework & WoldModel are allowed to call carla.World.tick()
# or if `False` the ticks should be handled by an outside system.
handle_ticks: true

# If True the agent will look for a new waypoint after the initial route is done.
#  
# Note:
#     Needs custom implementation in the main file by the user.
loop: true
# width of pygame window
width: 1280
# height of pygame window
height: 720

# Gamma correction of the camera.
# Depending on the weather and map this might need to be adjusted.
gamma: 2.2

# If False will spawn a vehicle for the agent to control, using the `filter` and `generation` settings.
# Otherwise will not spawn a vehicle but will wait until an actor with the name defined in `rolename` (default: "hero") is found.
#  
# This vehicle needs to be spawned by another process, e.g. through the scenario runner.
externalActor: true
# Actor name to wait for if `externalActor` is True.
rolename: hero
# Filter for the ego blueprint. Kept for compatibility with carla examples.
filter: vehicle.*
# Generation for the ego blueprint. Kept for compatibility with carla examples.
generation: 2

# Whether or not to use the CARLA's `carla.TrafficManager` to autopilot the agent
#  
# Note:
#     This disables the usage of the LunaticAgent, however needs to be
#     enabled in the main script by the user to work.
autopilot: false

# If None will remove all sensors from an externalActor if `WorldModel.restart` is
# called outside from the initialization, i.e. `WorldModel.restart` it is called a second time.
# Else will always/never remove the sensors when using `WorldModel.restart`.
restart_clean_sensors: null
# The settings of the agent
agent: ???

# ------------
# CameraConfig
# ------------
camera:
  # With pygame window. Takes the value from the `LaunchConfig`.
  width: ${width}
  # Height of pygame window. Takes the value from the `LaunchConfig`.
  height: ${height}
  # Gamma correction of the camera. Takes the value from the `LaunchConfig`.
  gamma: ${gamma}
  # If True will update the Unreal Engine's spectator camera
  spectator: true

  # Cameras and sensors attached to the ego vehicle
  # that can be viewed by the user in the pygame window.
  #  
  # Used with the `CameraManager.sensors`.
  #  
  # Attention:
  #     Usage not yet implemented.
  camera_blueprints:
  - NotImplemented
  recorder:

    # Folder to record the camera
    #  
    # Needs two numeric conversion placeholders.
    #  
    # Note:
    #     When using the ${hydra:runtime.output_dir} resolver
    #     @hydra.main needs to be used or hydra must be initialized.
    output_path: ${hydra:runtime.output_dir}/recorder/session%03d/%08d.bmp
    # Interval to record the camera
    frame_interval: 4
  hud:
    # Whether the HUD is enabled. Not Implemented
    enabled: true
    # Font size of the HUD. Not Implemented
    font_size: 20
    # Font color of the HUD. Not Implemented
    font_color:
    - 255
    - 255
    - 255
    # Font of the HUD. Not Implemented
    font: arial
    detection_matrix:
      # Whether to draw the detection matrix
      draw: true
      # Whether to draw the numerical values as text
      draw_values: true
      # Orient vertical (lanes are left to right) instead of horizontal.
      vertical: true
      # Settings for the pyplot.imshow function
      imshow_settings:
        cmap: jet
      # Settings for the text of pyplot.text when drawing the numerical values
      text_settings:
        color: orange

# Deactivates the pygame window and interface.
#  
# Attention:
#     Setting this to False is experimental.
pygame: true

overwrites: {}
speed:
  target_speed: 20.0
  follow_speed_limits: false
  max_speed: 50.0
  speed_decrease: 10.0
  safety_time: 3.0
  min_speed: 5.0
  speed_lim_dist: 3.0
  intersection_speed_decrease: 5.0
  vehicle_percentage_speed_difference: ???
distance:
  min_proximity_threshold: 10.0
  emergency_braking_distance: 5.0
  distance_to_leading_vehicle: ???
lane_change:
  same_lane_time: 0.0
  other_lane_time: 0.0
  lane_change_time: 2.0
  auto_lane_change: true
  random_left_lanechange_percentage: 0.1
  random_right_lanechange_percentage: 0.1
  keep_right_rule_percentage: 0.7
  random_lane_change_interval: 200
obstacles:
  ignore_vehicles: false
  ignore_traffic_lights: false
  ignore_stop_signs: false
  use_bbs_detection: false
  base_tlight_threshold: 5.0
  base_vehicle_threshold: 5.0
  detection_speed_ratio: 1.0
  use_dynamic_speed_threshold: true
  detection_angles:
    walkers_lane_change:
    - 0.0
    - 90.0
    walkers_same_lane:
    - 0.0
    - 60.0
    cars_lane_change:
    - 0.0
    - 180.0
    cars_same_lane:
    - 0.0
    - 30.0
    walkers_angle_adjust_chance: 0.0
    walkers_adjust_angle:
    - 20.0
    - -20.0
    cars_angle_adjust_chance: 0.0
    cars_adjust_angle:
    - 20.0
    - -50.0
  # For performance filters out vehicles that are further away than this distance in meters
  nearby_vehicles_max_distance: 45.0
  # For performance filters out pedestrians that are further away than this distance in meters
  nearby_walkers_max_distance: 10.0
  # Percentage of time to ignore traffic lights
  ignore_lights_percentage: 0.0
  ignore_signs_percentage: 0.0
  ignore_walkers_percentage: 0.0
  dynamic_threshold_by_speed: true
controls:
  max_brake: 0.5
  max_throttle: 0.75
  max_steering: 0.8

  # Sets a lane offset displacement from the center line. Positive values imply a right offset while negative ones mean a left one.
  # Default is 0. Numbers high enough to cause the vehicle to drive through other lanes might break the controller.
  vehicle_lane_offset: 0.0


# PID controller using the following semantics:
#         K_P -- Proportional term
#         K_D -- Differential term
#         K_I -- Integral term
#         dt -- time differential in seconds
# offset: If different than zero, the vehicle will drive displaced from the center line.
# Positive values imply a right offset while negative ones mean a left one. 
# Numbers high enough to cause the vehicle to drive through other lanes might break the controller.
#  
# Notes:
# `sampling_resolution` is used by the global planner to build a graph of road segments, also to get a path of waypoints from A to B
#  
# `sampling_radius` is similar but only used only by the local_planner to compute the next waypoints forward. The distance of those is the sampling_radius.
planner:

  # time differential in seconds
  #  
  # NOTE: Should set from main script.
  dt: ???
  # values of the lateral PID controller
  lateral_control_dict:
    K_P: 1.95
    K_D: 0.2
    K_I: 0.05
    dt: ${${..dt}}
  # values of the longitudinal PID controller
  longitudinal_control_dict:
    K_P: 1.0
    K_D: 0.0
    K_I: 0.05
    dt: ${${..dt}}

  # If different than zero, the vehicle will drive displaced from the center line.
  #  
  # Positive values imply a right offset while negative ones mean a left one. Numbers high enough
  # to cause the vehicle to drive through other lanes might break the controller.
  offset: ${controls.vehicle_lane_offset}

  # Distance between waypoints when planning a path in `local_planner._compute_next_waypoints`
  #  
  # Used with Waypoint.next(sampling_radius)
  sampling_radius: 2.0

  # Distance between waypoints in `BasicAgent._generate_lane_change_path`
  # and GlobalRoutePlanner to build the topology and path planning.
  #  
  # Used with the Waypoint.next(sampling_radius)
  sampling_resolution: 4.5

  # Removes waypoints from the queue that are too close to the vehicle.
  #  
  # Usage: min_distance = min_distance_next_waypoint + next_waypoint_distance_ratio * vehicle_speed 
  min_distance_next_waypoint: 3.0
  # Increases the minimum distance to the next waypoint based on the vehicles speed.
  next_waypoint_distance_ratio: 0.5

emergency:
  throttle: 0.0
  hand_brake: false
  ignore_percentage: 0.0
  hand_brake_modify_chance: 0.0
  do_random_steering: false
  random_steering_range:
  - -0.25
  - 0.25
rss:
  # Use the RSS sensor.
  #  
  # NOTE: Initializing with False and changing it to True is not supported.
  # If RSS is not available (no ad-rss library) this will be set to False.
  enabled: true
  use_stay_on_road_feature: On
  log_level: warn
  # Sets the visualization mode that should be rendered on the screen.
  debug_visualization_mode: RouteOnly
  # Setting for the default rule to always accept RSS updates if they are valid
  always_accept_update: false
  # For fast vehicles RSS currently is unreliable, disables rss updates when the vehicle is faster than this.
  rss_max_speed: ???

data_matrix:
  # Use the DataMatrix
  enabled: true

  # When the world uses synchronous mode and sync is true, the data matrix will be updated every sync_interval ticks.
  # A low value will have a negative impact on the fps.
  # If the world uses asynchronous mode or sync is False the data matrix will be updated by a different thread.
  # This increases the fps but updates will be less frequent.
  sync: true
  # The interval in frames after which the data matrix should be updated. Sync must be true.
  sync_interval: 5

  # XXX
  #  
  # TODO: do not have this in Agent config but in
  # hud : ${camera.hud.data_matrix}
  #  #drawing_options -> see camera.yaml
  #  #NOTE: this interpolation might fail if the parent has been removed!
  #  
  # ---
  #     
  # Keyword arguments for `DataMatrix.render`
  # NOTE: The default_settings substitute this with an interpolation that might not work,
  # as it relies on the parent LaunchConfig that is currently removed.
  #  
  # `camera.hud.data_matrix` is preferred.
  hud:
    draw: true
    values: true
    vertical: true
    imshow_settings:
      cmap: jet
    text_settings:
      color: orange

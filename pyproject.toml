[project]
name = ""
requires-python = ">=3.8"

[tool.ruff]
# Enable preview features.
preview = false

extend-exclude = [
    "typings/carla/ad/*",
    "scenario_runner/", 
    #"docs/*",
    "classes/_data_gathering/car_detection_matrix/informationUtilsV2.py",
    "mypyout/*",
    "typings/ad_parse2/*"
]

# Allow lines to be as long as 120.
line-length = 120

#max-doc-length = 88

[tool.ruff.lint]
typing-modules = ["launch_tools"]

# See: https://docs.astral.sh/ruff/rules/#pydocstyle-d
select = [
    "A",
    "B",
    "C4",

    "D405",
    "D416",

    "E",
    "F",
    "I",

    "G004",

    "ISC001",

    "PGH004",

    "PERF",

    "PIE808", # unnecessary-range-start

    "PLE1205",

    "RUF",
    "SIM201",
    "SIM202",
    "UP",
    "W",
    "YTT",
    
    "TCH004",
    "FIX003",

    "PLC",
    "PLE",

    # Pathlib
    # Note that os functions may be preferable if performance is a concern, e.g., in hot loops.
    "PTH123",

    "PGH005",

    "T10", # breakpoints
    "TCH0", # TypeChecking

    # "PIE790", # unnecessary pass and ...
]

ignore = [
    "UP037", # needs __future__.annotations
    "I001",
    "UP007",
    "W293",
    "E501", # line to long
    "UP036",
    "UP006",
    "PGH004",
    "UP006",
    "UP013",
    "UP014",
    "UP019",
    "UP035",
    "UP038",
    "UP015",
    #"W605",
    "RUF100",
    "PTH100", # os.path.abspath

    # deprecated:
    "ANN101", "ANN102",
]

[tool.ruff.lint.per-file-ignores]
"typings/*" = [
    "B008",
    "B006",
    "F405",
    "PIE790",
    "PYI011",
    "PYI014", # Non-simple type, should use ... instead.
    "PYI021", # Docstrings should not be included in stubs; but no docstrings from C

    # too many ...
    "PLR0904",
    "PLR0913",

    "A002",  # shadows builtin
]

"agents/rules/*" = [
    "RUF012",
    "ANN201",

    # do not report unused arguments
    "ARG001",
    "ARG002",
]
"agents/rules/_debug_rules.py" = [
    "PLC0415",
] 
"agents/tools/config_creation.py" = [
    "SIM118", # OmegaConf: key in dict and in dict.keys() is different
    "TCH002", # need some type check variables as runtime
]
"agents/tools/_config_tools.py" = [
    "SIM118", # OmegaConf key in dict and in dict.keys() is different
]
"classes/experimental/**" = [
    "A",
    "ARG",
    "PTH",
]
"classes/_data_gathering/car_detection_matrix/informationUtils.py" = [
    
]
"classes/hud.py" = [
    "UP032", # Format instead of percent preferred
]
"conf/experimental_rule_interpreter_examples/*" =[
    "ARG",
]
"**/docs/*" = [
    "E",
    "PLC",
    "PTH123",
]
"typings/carla/*" = [
    "A002"
]

# Keep original examples simple; allow {} in def
"agents/tools/misc.py" = ["ANN"]
"agents/tools/debug_drawing.py" = ["ANN"]
"agents/navigation/controller.py" = ["ANN"]
"agents/navigation/basic_agent.py" = ["B006", "ANN"]
"agents/navigation/behavior_agent.py" = ["B006", "ANN"]
"agents/navigation/constant_velocity_agent.py" = ["B006", "UP008", "ANN", "ARG005"]

"examples/*" = [
    "F841",
    "PTH",
]
"AgentGameLoop.py" = [
    "F841",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.flake8-annotations]
# Whether to suppress ANN401 for dynamically typed *args and **kwargs arguments.
#allow-star-arg-any = true

# Whether to suppress ANN* rules for any declaration that hasn't been typed at all.
#ignore-fully-untyped = true

# underscore _ variable
suppress-dummy-args = true

[tool.ruff.lint.flake8-bugbear]
# prevent B008, RUF009
extend-immutable-calls = ["omegaconf.II", "omegaconf.SI"]

[tool.ruff.lint.flake8-self]
extend-ignore-names = ["_target_"]

[tool.ruff.lint.isort]
#single-line-exclusions = ["os", "json"]
#required-imports = ["from __future__ import annotations"]
